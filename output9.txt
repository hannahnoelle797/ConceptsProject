Line Number: 1	Lexeme: print	Token: print_statement
Line Number: 1	Lexeme: (	Token: parenthesis_open
Line Number: 1	Lexeme: x	Token: id
Line Number: 1	Lexeme: )	Token: parenthesis_closed
Line Number: 3	Lexeme: y	Token: id
Line Number: 3	Lexeme: =	Token: eq_operator
Line Number: 3	Lexeme: 7	Token: integer_literal
Line Number: 4	Lexeme: print	Token: print_statement
Line Number: 4	Lexeme: (	Token: parenthesis_open
Line Number: 4	Lexeme: y	Token: id
Line Number: 4	Lexeme: )	Token: parenthesis_closed
Line Number: 6	Lexeme: j	Token: id
Line Number: 6	Lexeme: =	Token: eq_operator
Line Number: 6	Lexeme: 5	Token: integer_literal
Line Number: 6	Lexeme: +	Token: add_operator
Line Number: 6	Lexeme: 10	Token: integer_literal
Line Number: 7	Lexeme: print	Token: print_statement
Line Number: 7	Lexeme: (	Token: parenthesis_open
Line Number: 7	Lexeme: j	Token: id
Line Number: 7	Lexeme: )	Token: parenthesis_closed
Line Number: 9	Lexeme: a	Token: id
Line Number: 9	Lexeme: =	Token: eq_operator
Line Number: 9	Lexeme: 5	Token: integer_literal
Line Number: 10	Lexeme: b	Token: id
Line Number: 10	Lexeme: =	Token: eq_operator
Line Number: 10	Lexeme: 9	Token: integer_literal
Line Number: 11	Lexeme: c	Token: id
Line Number: 11	Lexeme: =	Token: eq_operator
Line Number: 11	Lexeme: a	Token: id
Line Number: 11	Lexeme: +	Token: add_operator
Line Number: 11	Lexeme: b	Token: id
Line Number: 12	Lexeme: print	Token: print_statement
Line Number: 12	Lexeme: (	Token: parenthesis_open
Line Number: 12	Lexeme: c	Token: id
Line Number: 12	Lexeme: )	Token: parenthesis_closed
Line Number: 14	Lexeme: m	Token: id
Line Number: 14	Lexeme: =	Token: eq_operator
Line Number: 15	Lexeme: print	Token: print_statement
Line Number: 15	Lexeme: (	Token: parenthesis_open
Line Number: 15	Lexeme: m	Token: id
Line Number: 15	Lexeme: *	Token: mul_operator
Line Number: 15	Lexeme: 1.61	Token: id
Line Number: 15	Lexeme: )	Token: parenthesis_closed
Line Number: 17	Lexeme: z	Token: id
Line Number: 17	Lexeme: =	Token: eq_operator
Line Number: 17	Lexeme: 5	Token: integer_literal
Line Number: 18	Lexeme: if	Token: if_statement
Line Number: 18	Lexeme: z	Token: id
Line Number: 18	Lexeme: >	Token: gt_operator
Line Number: 18	Lexeme: 0	Token: integer_literal
Line Number: 19	Lexeme: print	Token: print_statement
Line Number: 19	Lexeme: (	Token: parenthesis_open
Line Number: 19	Lexeme: z	Token: id
Line Number: 19	Lexeme: )	Token: parenthesis_closed
Line Number: 20	Lexeme: end	Token: end_statement
Line Number: 22	Lexeme: while	Token: while_statement
Line Number: 22	Lexeme: x	Token: id
Line Number: 22	Lexeme: >	Token: gt_operator
Line Number: 22	Lexeme: 0	Token: integer_literal
Line Number: 23	Lexeme: print	Token: print_statement
Line Number: 23	Lexeme: (	Token: parenthesis_open
Line Number: 23	Lexeme: x	Token: id
Line Number: 23	Lexeme: )	Token: parenthesis_closed
Line Number: 24	Lexeme: x	Token: id
Line Number: 24	Lexeme: =	Token: eq_operator
Line Number: 24	Lexeme: x	Token: id
Line Number: 24	Lexeme: -	Token: sub_operator
Line Number: 24	Lexeme: 1	Token: integer_literal
Line Number: 25	Lexeme: end	Token: end_statement
Line Number: 26	Lexeme: print	Token: print_statement
Line Number: 26	Lexeme: (	Token: parenthesis_open
Line Number: 26	Lexeme: x	Token: id
Line Number: 26	Lexeme: )	Token: parenthesis_closed
Line Number: 28	Lexeme: function	Token: function_statment
Line Number: 28	Lexeme: w	Token: id
Line Number: 28	Lexeme: (	Token: parenthesis_open
Line Number: 28	Lexeme: )	Token: parenthesis_closed
Line Number: 29	Lexeme: q	Token: id
Line Number: 29	Lexeme: =	Token: eq_operator
Line Number: 29	Lexeme: 7	Token: integer_literal
Line Number: 30	Lexeme: print	Token: print_statement
Line Number: 30	Lexeme: (	Token: parenthesis_open
Line Number: 30	Lexeme: q	Token: id
Line Number: 30	Lexeme: )	Token: parenthesis_closed
Line Number: 31	Lexeme: end	Token: end_statement
