Line Number: 1 Lexeme: for Identifier: 5003 Token: <for>
Line Number: 1 Lexeme: i Identifier: 8105 Token: <id>
Line Number: 1 Lexeme: = Identifier: 5016 Token: <eq_operator>
Line Number: 1 Lexeme: 3 Identifier: 6003 Token: <integer_literal>
Line Number: 1 Lexeme: : Identifier: 5024 Token: <colon>
Line Number: 1 Lexeme: 5 Identifier: 6005 Token: <integer_literal>
Line Number: 2 Lexeme: if Identifier: 5005 Token: <if>
Line Number: 2 Lexeme: i Identifier: 8105 Token: <id>
Line Number: 2 Lexeme: != Identifier: 5022 Token: <ne_operator>
Line Number: 2 Lexeme: 4 Identifier: 6004 Token: <integer_literal>
Line Number: 3 Lexeme: print Identifier: 5006 Token: <print>
Line Number: 3 Lexeme: ( Identifier: 5009 Token: <(>
Line Number: 3 Lexeme: i Identifier: 8105 Token: <id>
Line Number: 3 Lexeme: ) Identifier: 5010 Token: <)>
Line Number: 4 Lexeme: else Identifier: 5000 Token: <else>
Line Number: 5 Lexeme: print Identifier: 5006 Token: <print>
Line Number: 5 Lexeme: ( Identifier: 5009 Token: <(>
Line Number: 5 Lexeme: 333 Identifier: 6333 Token: <integer_literal>
Line Number: 5 Lexeme: ) Identifier: 5010 Token: <)>
Line Number: 6 Lexeme: end Identifier: 5001 Token: <end>
Line Number: 7 Lexeme: end Identifier: 5001 Token: <end>
